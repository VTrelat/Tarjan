@Phdthesis{bloemen:strong,
  author = {Vincent Bloemen},
  title = {Strong Connectivity and Shortest Paths for Checking Models},
  school = {University of Twente},
  year = {2019},
  address = {Enschede, The Netherlands},
  url = {https://ris.utwente.nl/ws/portalfiles/portal/122499728/thesis.pdf},
}

@Incollection{dijkstra:finding,
  author = {Edsger W. Dijkstra},
  title = {Finding the Maximum Strong Components in a Directed Graph},
  booktitle = {Selected Writings in Computing: A Personal Perspective},
  series = {Texts and Monographs in Computer Science},
  publisher = {Springer},
  year = {1982},
  pages = {22-30},
}

@article{lammich:gabow,
  author  = {Peter Lammich},
  title   = {Verified Efficient Implementation of Gabow's Strongly Connected Components Algorithm},
  journal = {Archive of Formal Proofs},
  month   = {May},
  year    = {2014},
  note    = {\url{https://isa-afp.org/entries/Gabow_SCC.html},
            Formal proof development},
  ISSN    = {2150-914x},
}

@Article{munro:efficient,
  author = {{J. Ian} Munro},
  title = {Efficient Determination of the Transitive Closure of a Directed Graph},
  journal = {Information Processing Letters},
  volume = 1,
  number = 2,
  pages = {56-58},
  year = 1971,
}

@Article{tarjan:depth-first,
  author = 	 {Robert Tarjan},
  title = 	 {Depth first search and linear graph algorithms},
  journal = 	 {SIAM Journal on Computing},
  year = 	 {1972},
}

@book{nipkow_isabellehol_2002,
  address    = {Berlin, Heidelberg},
  series     = {Lecture {Notes} in {Computer} {Science}},
  title      = {Isabelle/{HOL}: {A} {Proof} {Assistant} for {Higher}-{Order} {Logic}},
  volume     = {2283},
  isbn       = {978-3-540-43376-7},
  shorttitle = {Isabelle/{HOL}},
  abstract   = {This volume is a self-contained introduction to interactive proof in high- order logic (HOL), using the proof assistant Isabelle 2002. Compared with existing Isabelle documentation, it provides a direct route into higher-order logic, which most people prefer these days. It bypasses ?rst-order logic and minimizes discussion of meta-theory. It is written for potential users rather than for our colleagues in the research world. Another departure from previous documentation is that we describe Markus Wenzel’s proof script notation instead of ML tactic scripts. The l- ter make it easier to introduce new tactics on the ?y, but hardly anybody does that. Wenzel’s dedicated syntax is elegant, replacing for example eight simpli?cation tactics with a single method, namely simp, with associated - tions. The book has three parts. – The ?rst part, Elementary Techniques, shows how to model functional programs in higher-order logic. Early examples involve lists and the natural numbers. Most proofs are two steps long, consisting of induction on a chosen variable followed by the auto tactic. But even this elementary part covers such advanced topics as nested and mutual recursion. – The second part, Logic and Sets, presents a collection of lower-level tactics that you can use to apply rules selectively. It also describes I- belle/HOL’s treatment of sets, functions, and relations and explains how to de?ne sets inductively. One of the examples concerns the theory of model checking, and another is drawn from a classic textbook on formal languages.},
  language   = {eng},
  publisher  = {Springer Berlin / Heidelberg},
  author     = {Nipkow, Tobias and Paulson, Lawrence C. and Wenzel, Markus},
  year       = {2002},
  doi        = {10.1007/3-540-45949-9},
  note       = {Book Title: Isabelle/HOL},
  keywords   = {Artificial intelligence, Automatic theorem proving, Computer science, Computer logic, Information theory, Logic, Logic design, Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Programming Languages, Compilers, Interpreters, Theory of Computation}
}